{"version":3,"sources":["helpers/fetch.js","types/types.js","helpers/prepareEvents.js","actions/events.js","actions/auth.js","hooks/useForm/useForm.js","components/auth/LoginScreen.jsx","components/ui/NavBar.jsx","helpers/calendar-messages-es.js","components/calendar/CalendarEvent.jsx","actions/ui.js","components/calendar/CalendarModal.jsx","components/ui/AddNewFab.jsx","components/ui/DeleteEventFab.jsx","components/calendar/CalendarScreen.jsx","router/PrivateRoute.js","router/PublicRoute.js","router/AppRouter.jsx","reducers/authReducer.js","reducers/calendarReducer.js","reducers/uiReducer.js","reducers/rootReducer.js","store/store.js","CalendarApp.jsx","index.js"],"names":["baseUrl","process","fetchSinToken","endpoint","data","method","url","fetch","headers","body","JSON","stringify","fetchConToken","token","localStorage","getItem","types","prepareEvents","events","map","evento","end","moment","toDate","start","eventAddNew","event","type","payload","eventClearActive","eventUpdated","eventDeleted","eventLoaded","checkingFinish","login","user","startLogout","dispatch","removeItem","logout","useForm","initialState","useState","values","setValues","reset","handleInputChange","target","name","value","LoginScreen","useDispatch","lEmail","lPassword","formLoginValues","handleLoginInputChange","resetLogin","rName","rEmail","rPassword1","rPassword2","formRegisterValues","handleRegisterInputChange","resetRegister","className","onSubmit","e","email","password","preventDefault","a","resp","json","uid","setItem","Date","getTime","Swal","fire","msg","errors","placeholder","onChange","required","NavBar","useSelector","state","auth","onClick","messages","allDay","previous","next","today","month","week","day","agenda","date","time","noEventsInRange","showMore","total","CalendarEvent","title","uiOpenModal","customStyles","content","top","left","right","bottom","marginRight","transform","Modal","setAppElement","now","minutes","seconds","add","endDate","clone","initEvent","notes","CalendarModal","modalOpen","ui","activeEvent","calendar","formValues","setFormValues","dateStart","setDateStart","dateEnd","setDateEnd","titleValid","setTitleValid","useEffect","closeModal","isOpen","onRequestClose","style","overlayClassName","closeTimeoutMS","momentStart","momentEnd","isSameOrAfter","trim","length","id","getState","eventoDb","_id","eventStartAddNew","minDate","autoComplete","rows","AddNewFab","handleOpenModal","DeleteEventFab","eventoBorrado","locale","localizer","momentLocalizer","CalendarScreen","lastView","setLastView","eventos","startAccessor","endAccessor","eventPropGetter","isSelected","backgroundColor","boderRadius","opacitiy","display","color","components","onDoubleClickEvent","onSelectEvent","onView","view","onSelectSlot","selectable","PrivateRoute","isAuthenticated","Component","component","rest","location","pathname","props","to","PublicRoute","AppRouter","checking","path","exact","rootReducer","combineReducers","action","filter","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","thunk","CalendarApp","ReactDOM","render","document","getElementById"],"mappings":"mPAAMA,EAAUC,yCAEVC,EAAgB,SAACC,EAASC,GAAqB,IAAhBC,EAAe,uDAAR,MAClCC,EAAG,UAAMN,EAAN,YAAiBG,GAC1B,MAAY,QAATE,EACQE,MAAMD,GAGNC,MAAMD,EAAI,CACbD,SACAG,QAAQ,CACJ,eAAe,oBAEnBC,KAAKC,KAAKC,UAAUP,MAI1BQ,EAAgB,SAACT,EAASC,GAAqB,IAAhBC,EAAe,uDAAR,MAClCC,EAAG,UAAMN,EAAN,YAAiBG,GACpBU,EAASC,aAAaC,QAAQ,UAAY,GAChD,MAAY,QAATV,EACQE,MAAMD,EAAI,CACbD,SACAG,QAAQ,CACJ,UAAUK,KAKXN,MAAMD,EAAI,CACbD,SACAG,QAAQ,CACJ,eAAe,mBACf,UAAUK,GAEdJ,KAAKC,KAAKC,UAAUP,MCnCnBY,EACG,kBADHA,EAEK,mBAFLA,EAGM,qBAHNA,EAIG,kBAJHA,EAMQ,sBANRA,EAOG,iBAPHA,EAQI,uBARJA,EASI,uBATJA,EAWW,+BAXXA,EAaE,eAbFA,EAcU,wBAdVA,EAgBE,gBAhBFA,EAiBG,wB,wBCdHC,EAAgB,WAAgB,IAAfC,EAAc,uDAAL,GACnC,OAAOA,EAAOC,KAAI,SAACC,GAAD,mBAAC,eACZA,GADW,IAEdC,IAAIC,IAAOF,EAAOC,KAAKE,SACvBC,MAAMF,IAAOF,EAAOI,OAAOD,eCiB5BE,EAAc,SAACC,GAAD,MAAW,CAC5BC,KAAKX,EACLY,QAAQF,IAMCG,EAAmB,iBAAK,CACjCF,KAAKX,IAmBFc,EAAe,SAACJ,GAAD,MAAU,CAC5BC,KAAKX,EACLY,QAAQF,IAsBLK,EAAe,iBAAK,CACvBJ,KAAKX,IAmBHgB,EAAc,SAACd,GAAD,MAAW,CAC3BS,KAAKX,EACLY,QAAQV,IC9BNe,EAAiB,iBAAO,CAC5BN,KAAMX,IAEFkB,EAAQ,SAACC,GAAD,MAAW,CACvBR,KAAMX,EACNY,QAASO,IAEEC,EAAc,WACzB,OAAO,SAACC,GACNvB,aAAawB,WAAW,SACxBxB,aAAawB,WAAW,mBACxBD,EDvB4B,CAC5BV,KAAKX,ICuBLqB,EAASE,OAGPA,EAAS,iBAAO,CACpBZ,KAAMX,I,gBClFKwB,EAAU,WAAwB,IAAvBC,EAAsB,uDAAP,GACrC,EAA4BC,mBAASD,GAArC,mBAAOE,EAAP,KAAeC,EAAf,KACMC,EAAQ,WACZD,EAAUH,IAENK,EAAoB,SAAC,GAAgB,IAAdC,EAAa,EAAbA,OAC3BH,EAAU,2BACLD,GADI,kBAENI,EAAOC,KAAOD,EAAOE,UAG1B,MAAO,CAACN,EAAQG,EAAkBD,I,eCNvBK,EAAc,WACvB,IAAMb,EAAWc,cACjB,EAA2DX,EAAQ,CAC/DY,OAAO,GACPC,UAAU,KAFd,mBAAMC,EAAN,KAAsBC,EAAtB,KAA6CC,EAA7C,KAIA,EAAoEhB,EAAQ,CACxEiB,MAAM,GACNC,OAAO,GACPC,WAAW,GACXC,WAAW,KAJf,mBAAMC,EAAN,KAAyBC,EAAzB,KAAmDC,EAAnD,KAmBOX,EAAoBE,EAApBF,OAAOC,EAAaC,EAAbD,UACPK,EAAsCG,EAAtCH,OAAOC,EAA+BE,EAA/BF,WAAWF,EAAoBI,EAApBJ,MAAMG,EAAcC,EAAdD,WAC/B,OACI,qBAAKI,UAAU,4BAAf,SACI,sBAAKA,UAAU,MAAf,UACI,sBAAKA,UAAU,wBAAf,UACI,yCACA,uBAAMC,SApBF,SAACC,GFfC,IAACC,EAAOC,EEgB1BF,EAAEG,iBACFhC,GFjBmB8B,EEiBCf,EFjBMgB,EEiBCf,EFhBjC,uCAAO,WAAOhB,GAAP,iBAAAiC,EAAA,sEACcpE,EAAc,OAAQ,CAAEiE,QAAOC,YAAY,QADzD,cACCG,EADD,gBAEcA,EAAKC,OAFnB,QAEC/D,EAFD,QAGIgE,KACP3D,aAAa4D,QAAQ,QAASjE,EAAKI,OACnCC,aAAa4D,QAAQ,mBAAmB,IAAIC,MAAOC,WACnDvC,EACEH,EAAM,CACJuC,IAAKhE,EAAKgE,IACVN,MAAO1D,EAAK0D,MACZnB,KAAMvC,EAAKuC,SAIf6B,IAAKC,KAAK,QAASrE,EAAKsE,IAAK,SAE3BtE,EAAKuE,QACPH,IAAKC,KAAK,QAAS,gCAAiC,SAjBjD,2CAAP,wDEiBMtB,KAiBY,UACI,qBAAKQ,UAAU,aAAf,SACI,uBACIrC,KAAK,OACLqC,UAAU,eACViB,YAAY,SACZjC,KAAK,SACLC,MAAOG,EACP8B,SAAU3B,EACV4B,UAAQ,MAGhB,qBAAKnB,UAAU,aAAf,SACI,uBACIrC,KAAK,WACLqC,UAAU,eACViB,YAAY,gBACZjC,KAAK,YACLC,MAAOI,EACP6B,SAAU3B,EACV4B,UAAQ,MAGhB,qBAAKnB,UAAU,aAAf,SACI,uBACIrC,KAAK,SACLqC,UAAU,YACVf,MAAM,kBAMtB,sBAAKe,UAAU,wBAAf,UACI,0CACA,uBAAMC,SAlDC,SAACC,GAEpB,GADAA,EAAEG,iBACCV,IAAaC,EACZ,OAAOiB,IAAKC,KAAK,QAAQ,uCAAoC,SFD5C,IAACX,EAAOC,EAAUpB,EEGvCX,GFHsB8B,EEGCT,EFHMU,EEGCT,EFHSX,EEGES,EFF/C,uCAAO,WAAOpB,GAAP,iBAAAiC,EAAA,sEACcpE,EACjB,WACA,CAAEiE,QAAOC,WAAUpB,QACnB,QAJG,cACCuB,EADD,gBAMcA,EAAKC,OANnB,QAMC/D,EAND,QAOIgE,KACP3D,aAAa4D,QAAQ,QAASjE,EAAKI,OACnCC,aAAa4D,QAAQ,mBAAmB,IAAIC,MAAOC,WACnDvC,EACEH,EAAM,CACJuC,IAAKhE,EAAKgE,IACVN,MAAO1D,EAAK0D,MACZnB,KAAMvC,EAAKuC,SAIf6B,IAAKC,KAAK,QAASrE,EAAKsE,IAAK,SAlB1B,2CAAP,wDEGMhB,KA4CY,UACI,qBAAKC,UAAU,aAAf,SACI,uBACIrC,KAAK,OACLqC,UAAU,eACViB,YAAY,SACZjC,KAAK,QACLC,MAAOQ,EACPyB,SAAUpB,EACVqB,UAAQ,MAGhB,qBAAKnB,UAAU,aAAf,SACI,uBACIrC,KAAK,QACLqC,UAAU,eACViB,YAAY,SACZjC,KAAK,SACLC,MAAOS,EACPwB,SAAUpB,EACVqB,UAAQ,MAGhB,qBAAKnB,UAAU,aAAf,SACI,uBACIrC,KAAK,WACLqC,UAAU,eACViB,YAAY,gBACZjC,KAAK,aACLC,MAAOU,EACPuB,SAAUpB,EACVqB,UAAQ,MAIhB,qBAAKnB,UAAU,aAAf,SACI,uBACIrC,KAAK,WACLqC,UAAU,eACViB,YAAY,0BACZjC,KAAK,aACLC,MAAOW,EACPsB,SAAUpB,EACVqB,UAAQ,MAIhB,qBAAKnB,UAAU,aAAf,SACI,uBACIrC,KAAK,SACLqC,UAAU,YACVf,MAAM,+BCvGvBmC,EAjBA,WACX,IAAM/C,EAAWc,cACVH,EAAQqC,aAAY,SAAAC,GAAK,OAAEA,EAAMC,QAAjCvC,KAIP,OACI,sBAAKgB,UAAU,kCAAf,UACI,sBAAMA,UAAU,eAAhB,SAAgChB,IAChC,yBAAQgB,UAAU,yBAAyBwB,QAN9B,WACjBnD,EAASD,MAKL,UACI,mBAAG4B,UAAU,wBACb,kD,QChBHyB,EAAW,CACpBC,OAAQ,iBACRC,SAAU,IACVC,KAAM,IACNC,MAAO,MACPC,MAAO,MACPC,KAAM,SACNC,IAAK,SACLC,OAAQ,SACRC,KAAM,QACNC,KAAM,OACNzE,MAAO,SACP0E,gBAAiB,+BACjBC,SAAU,SAAAC,GAAK,8BAAkBA,EAAlB,OCDJC,G,YAVO,SAAC,GAAa,IAAZ7E,EAAW,EAAXA,MACb8E,EAAc9E,EAAd8E,MAAMrE,EAAQT,EAARS,KACb,OACI,gCACI,iCAASqE,IACT,6CAASrE,QAAT,IAASA,OAAT,EAASA,EAAMa,a,qCCLdyD,GAAc,iBAAM,CAC7B9E,KAAKX,ICUH0F,GAAe,CACnBC,QAAS,CACPC,IAAK,MACLC,KAAM,MACNC,MAAO,OACPC,OAAQ,OACRC,YAAa,OACbC,UAAW,0BAGfC,IAAMC,cAAc,SACpB,IAAMC,GAAM9F,MAAS+F,QAAQ,GAAGC,QAAQ,GAAGC,IAAI,EAAG,SAC5CC,GAAUJ,GAAIK,QAAQF,IAAI,EAAG,SAC7BG,GAAY,CAChBlB,MAAO,GACPmB,MAAO,GACPnG,MAAO4F,GAAI7F,SACXF,IAAKmG,GAAQjG,UA4IAqG,GA1IO,WACpB,IAAMvF,EAAWc,cACT0E,EAAcxC,aAAY,SAACC,GAAD,OAAWA,EAAMwC,MAA3CD,UACAE,EAAgB1C,aAAY,SAACC,GAAD,OAAWA,EAAM0C,YAA7CD,YACR,EAAoCrF,mBAASgF,IAA7C,mBAAOO,EAAP,KAAmBC,EAAnB,KACA,EAAkCxF,mBAAS0E,GAAI7F,UAA/C,mBAAO4G,EAAP,KAAkBC,EAAlB,KACA,EAA8B1F,mBAAS8E,GAAQjG,UAA/C,mBAAO8G,EAAP,KAAgBC,EAAhB,KACA,EAAoC5F,oBAAS,GAA7C,mBAAO6F,EAAP,KAAmBC,EAAnB,KACQhC,EAA6ByB,EAA7BzB,MAAOmB,EAAsBM,EAAtBN,MAAOnG,EAAeyG,EAAfzG,MAAOH,EAAQ4G,EAAR5G,IAC7BoH,qBAAU,WAENP,EADEH,GAGYL,MAEf,CAACK,EAAaG,IACjB,IAAMpF,EAAoB,SAAC,GAAgB,IAAdC,EAAa,EAAbA,OAC3BmF,EAAc,2BACTD,GADQ,kBAEVlF,EAAOC,KAAOD,EAAOE,UAGpByF,EAAa,WACjBrG,EDlD6B,CAC7BV,KAAKX,ICkDLqB,EAASR,KACTqG,EAAcR,KA0ChB,OACE,eAAC,IAAD,CACEiB,OAAQd,EAERe,eAAgBF,EAChBG,MAAOnC,GACP1C,UAAU,QACV8E,iBAAiB,cACjBC,eAAgB,IAPlB,UASE,mCAAMhB,EAAc,gBAAiB,eAArC,OACA,uBACA,uBAAM/D,UAAU,YAAYC,SAtCP,SAACC,GACxBA,EAAEG,iBACF,IRvC6B3C,EQuCvBsH,EAAc1H,IAAOE,GACrByH,EAAY3H,IAAOD,GACzB,OAAI2H,EAAYE,cAAcD,GACrBpE,IAAKC,KACV,QACA,mDACA,SAGA0B,EAAM2C,OAAOC,OAAS,EACjBZ,GAAc,IAGrBnG,EADE0F,GRnDyBrG,EQoDDuG,ERnD5B,uCAAO,WAAM5F,GAAN,iBAAAiC,EAAA,+EAEoB1D,EAAc,UAAD,OAAWc,EAAM2H,IAAK3H,EAAM,OAF7D,cAEO6C,EAFP,gBAGoBA,EAAKC,OAHzB,QAGO/D,EAHP,QAISW,OACJiB,EAASP,EAAaJ,IAGtBmD,IAAKC,KAAK,QAAQrE,EAAKsE,IAAI,SARhC,kDAWCF,IAAKC,KAAK,QAAV,KAAwB,SAXzB,0DAAP,uDAhC4B,SAACpD,GAC7B,8CAAO,WAAMW,EAASiH,GAAf,uBAAAhF,EAAA,+DACegF,IAAW/D,KAAtBd,EADJ,EACIA,IAAIzB,EADR,EACQA,KADR,kBAGoBpC,EAAc,SAASc,EAAM,QAHjD,cAGO6C,EAHP,gBAIoBA,EAAKC,OAJzB,QAIO/D,EAJP,QAKU8I,WACL7H,EAAM2H,GAAK5I,EAAK8I,SAASF,GACzB3H,EAAMS,KAAK,CACPqH,IAAI/E,EACJzB,QAEJX,EAASZ,EAAYC,KAX1B,kDAcCmD,IAAKC,KAAK,QAAV,KAAwB,SAdzB,0DAAP,wDQqFI2E,CAAiBxB,IAKrBO,GAAc,QACdE,MAcE,UACE,sBAAK1E,UAAU,aAAf,UACE,wDACA,cAAC,KAAD,CACEkB,SAjDoB,SAAChB,GAC7BkE,EAAalE,GACbgE,EAAc,2BACTD,GADQ,IAEXzG,MAAO0C,MA8CDjB,MAAOkF,EACPnE,UAAU,oBAId,sBAAKA,UAAU,aAAf,UACE,qDACA,cAAC,KAAD,CACEkB,SAjEkB,SAAChB,GAC3BoE,EAAWpE,GACXgE,EAAc,2BACTD,GADQ,IAEX5G,IAAK6C,MA8DCjB,MAAOoF,EACPrE,UAAU,eACV0F,QAASvB,OAIb,uBACA,sBAAKnE,UAAU,aAAf,UACE,mDACA,uBACErC,KAAK,OACLqC,UAAS,wBAAmBuE,GAAc,cAC1CtD,YAAY,uBACZjC,KAAK,QACL2G,aAAa,MACb1G,MAAOuD,EACPtB,SAAUpC,EACVqC,UAAQ,IAEV,uBAAOkE,GAAG,YAAYrF,UAAU,uBAAhC,yCAKF,qBAAKA,UAAU,aAAf,SACE,0BACErC,KAAK,OACLqC,UAAU,eACViB,YAAY,QACZ2E,KAAK,IACL5G,KAAK,QACLC,MAAO0E,EACPzC,SAAUpC,MAId,yBAAQnB,KAAK,SAASqC,UAAU,oCAAhC,UACE,mBAAGA,UAAU,gBACb,sDCnJK6F,GAZG,WACd,IAAMxH,EAAWc,cACX2G,EAAiB,WACnBzH,EAASoE,OAEb,OACI,wBAAQzC,UAAU,sBAAsBwB,QAASsE,EAAjD,SACI,mBAAG9F,UAAU,cAAcwB,QAASsE,OCMjCC,GAbQ,WACnB,IAAM1H,EAAWc,cAIjB,OACI,yBAAQa,UAAU,4BAA4BwB,QAJ7B,WACjBnD,EVqDJ,uCAAO,WAAMA,EAASiH,GAAf,mBAAAhF,EAAA,6DACI+E,EAAKC,IAAWtB,SAASD,YAAzBsB,GADJ,kBAGoBzI,EAAc,UAAD,OAAWyI,GAAK,GAAG,UAHpD,cAGO9E,EAHP,gBAIoBA,EAAKC,OAJzB,QAIO/D,EAJP,QAKSuJ,cACJ3H,EAASN,KAGT8C,IAAKC,KAAK,QAAQrE,EAAKsE,IAAI,SAThC,kDAYCF,IAAKC,KAAK,QAAV,KAAwB,SAZzB,0DAAP,0DUlDI,UACI,mBAAGd,UAAU,iBACb,sDCGZ1C,IAAO2I,OAAO,MACd,IAAMC,GAAYC,YAAgB7I,KAsEnB8I,GApEQ,WACnB,IAAM/H,EAAWc,cAEjB,EAA6BkC,aAAY,SAAAC,GAAK,OAAEA,EAAM0C,YAA/C9G,EAAP,EAAOA,OAAO6G,EAAd,EAAcA,YACPtD,EAAOY,aAAY,SAAAC,GAAK,OAAEA,EAAMC,QAAhCd,IACP,EAAgC/B,mBAAS5B,aAAaC,QAAQ,aAAa,SAA3E,mBAAOsJ,EAAP,KAAiBC,EAAjB,KACA7B,qBAAU,WACRpG,EX2DF,uCAAO,WAAMA,GAAN,mBAAAiC,EAAA,+EAEoB1D,EAAc,UAFlC,cAEO2D,EAFP,gBAGoBA,EAAKC,OAHzB,OAGO/D,EAHP,OAIOS,EAASD,EAAcR,EAAK8J,SAClClI,EAASL,EAAYd,IALtB,kDAQC2D,IAAKC,KAAK,QAAV,KAAwB,SARzB,0DAAP,yDW1DE,CAACzC,IAmCL,OACE,sBAAK2B,UAAU,kBAAf,UACE,cAAC,EAAD,IACA,cAAC,IAAD,CACEkG,UAAWA,GACXhJ,OAAQA,EACRsJ,cAAc,QACdC,YAAY,MACZhF,SAAUA,EACViF,gBArBqB,SAAChJ,EAAMF,EAAMH,EAAIsJ,GAQtC,MAAO,CACH9B,MARU,CACV+B,gBAAiBnG,IAAM/C,EAAMS,KAAKqH,IAAK,UAAW,UAClDqB,YAAY,MACZC,SAAS,GACTC,QAAQ,QACRC,MAAM,WAgBVC,WAAY,CAACvJ,MAAM6E,GACnB2E,mBA7CkB,WACpB7I,EAASoE,OA6CP0E,cA1CkB,SAACjH,GACnB7B,EXJiC,CACrCV,KAAKX,EACLY,QWE4BsC,KA0CxBkH,OAxCiB,SAAClH,GAClBoG,EAAYpG,GACZpD,aAAa4D,QAAQ,WAAWR,IAuChCmH,KAAMhB,EACNiB,aAtCiB,SAACpH,GAClB7B,EAASR,MAsCT0J,YAAY,IAEd,cAAC,GAAD,IACCxD,GAAe,cAAC,GAAD,IAChB,cAAC,GAAD,Q,4CCjESyD,GAZM,SAAC,GAAmD,IAAlDC,EAAiD,EAAjDA,gBAA0BC,EAAuB,EAAjCC,UAAuBC,EAAU,mBAEpE,OADA9K,aAAa4D,QAAQ,WAAWkH,EAAKC,SAASC,UAE1C,cAAC,IAAD,2BAAWF,GAAX,IAAiBD,UAAW,SAACI,GAAD,OAAWN,EAAkB,cAACC,EAAD,eAAeK,IAAW,cAAC,IAAD,CAAUC,GAAG,gB,mCCQzFC,GAXK,SAAC,GAAiD,IAAhDR,EAA+C,EAA/CA,gBAA0BC,EAAqB,EAA/BC,UAAuBC,EAAQ,mBACjE,OACI,cAAC,IAAD,2BAAWA,GAAX,IAAiBD,UAAW,SAACI,GAAD,OAAYN,EAA4C,cAAC,IAAD,CAAUO,GAAG,MAAvC,cAACN,EAAD,eAAeK,SCmClEG,GAhCG,WAChB,IAAM7J,EAAWc,cACjB,EAA0BkC,aAAY,SAACC,GAAD,OAAWA,EAAMC,QAA/C4G,EAAR,EAAQA,SAAU1H,EAAlB,EAAkBA,IAIlB,OAHAgE,qBAAU,WACRpG,EbqCF,uCAAO,WAAOA,GAAP,iBAAAiC,EAAA,sEACc1D,EAAc,cAD5B,cACC2D,EADD,gBAEcA,EAAKC,OAFnB,QAEC/D,EAFD,QAGIgE,KACP3D,aAAa4D,QAAQ,QAASjE,EAAKI,OACnCC,aAAa4D,QAAQ,mBAAmB,IAAIC,MAAOC,WACnDvC,EACEH,EAAM,CACJuC,IAAKhE,EAAKgE,IACVN,MAAO1D,EAAK0D,MACZnB,KAAMvC,EAAKuC,SAIfX,EAASJ,KAdN,2CAAP,yDapCG,CAACI,IACA8J,EACK,2CAGP,cAAC,IAAD,UACA,8BACI,eAAC,IAAD,WACE,cAAC,GAAD,CACEC,KAAK,SACLC,OAAK,EACLV,UAAWzI,EACXuI,kBAAmBhH,IAErB,cAAC,GAAD,CACE2H,KAAK,IACLC,OAAK,EACLV,UAAWvB,GACXqB,kBAAmBhH,IAErB,cAAC,IAAD,CAAUuH,GAAG,c,kBChCjBvJ,GAAe,CACjB0J,UAAS,G,SCWP1J,GAAe,CACnBvB,OAAQ,GACR6G,YAAa,MCdTtF,GAAe,CACjBoF,WAAU,GCEDyE,GAAcC,aAAgB,CACvCzE,GDDqB,WAAgC,IAA/BxC,EAA8B,uDAAtB7C,GAAa+J,EAAS,uCACpD,OAAQA,EAAO7K,MACX,KAAKX,EACD,kCACOsE,GADP,IAEIuC,WAAU,IAEd,KAAK7G,EACL,kCACOsE,GADP,IAEIuC,WAAU,IAIlB,QACI,OAAOvC,ICbf0C,SFW2B,WAAmC,IAAlC1C,EAAiC,uDAAzB7C,GAAc+J,EAAW,uCAC/D,OAAQA,EAAO7K,MACb,KAAKX,EACH,OAAO,2BACFsE,GADL,IAEEyC,YAAayE,EAAO5K,UAExB,KAAKZ,EACH,OAAO,2BACFsE,GADL,IAEEpE,OAAO,GAAD,oBAAMoE,EAAMpE,QAAZ,CAAoBsL,EAAO5K,YAErC,KAAKZ,EACH,OAAO,2BACFsE,GADL,IAEEyC,YAAa,OAEjB,KAAK/G,EACH,OAAO,2BACFsE,GADL,IAEEpE,OAAQoE,EAAMpE,OAAOC,KAAI,SAAC+C,GAAD,OACvBA,EAAEmF,KAAOmD,EAAO5K,QAAQyH,GAAKmD,EAAO5K,QAAUsC,OAGlD,KAAKlD,EACL,OAAO,2BACFsE,GADL,IAEEpE,OAAQoE,EAAMpE,OAAOuL,QAAO,SAACvI,GAAD,OACzBA,EAAEmF,KAAO/D,EAAMyC,YAAYsB,MAE9BtB,YAAY,OAEd,KAAK/G,EACL,OAAO,2BACFsE,GADL,IAEEpE,OAAO,aAAKsL,EAAO5K,WAErB,KAAKZ,EACL,OAAO,eACFyB,IAQP,QACE,OAAO6C,IE1DTC,KHDuB,WAA8B,IAA7BD,EAA4B,uDAAtB7C,GAAa+J,EAAS,uCACpD,OAAQA,EAAO7K,MACX,KAAKX,EAML,KAAKA,EACD,kCACOsE,GADP,IAEI6G,UAAS,GACNK,EAAO5K,SAElB,KAAKZ,EACD,kCACOsE,GADP,IAEI6G,UAAS,IAEjB,KAAKnL,EACD,MAAO,CACHmL,UAAS,GAEjB,QACI,OAAO7G,MI5BboH,GAAsC,qBAAXC,QAA0BA,OAAOC,sCAAyCC,KAE9FC,GAAQC,aACjBT,GACAI,GAAiBM,aAAgBC,QCQtBC,GAVK,WAChB,OACI,8BACI,cAAC,IAAD,CAAUJ,MAAOA,GAAjB,SACA,cAAC,GAAD,S,OCLZK,IAASC,OACL,cAAC,GAAD,IACFC,SAASC,eAAe,U","file":"static/js/main.fb7d5517.chunk.js","sourcesContent":["const baseUrl = process.env.REACT_APP_API_URL;\r\n\r\nconst fetchSinToken = (endpoint,data,method='GET')=>{\r\n    const url = `${baseUrl}/${endpoint}`;\r\n    if(method==='GET'){\r\n        return fetch(url)\r\n    }\r\n    else{\r\n        return fetch(url,{\r\n            method,\r\n            headers:{\r\n                'Content-type':'application/json'\r\n            },\r\n            body:JSON.stringify(data)\r\n        })\r\n    }\r\n}   \r\nconst fetchConToken = (endpoint,data,method='GET')=>{\r\n    const url = `${baseUrl}/${endpoint}`;\r\n    const token  = localStorage.getItem('token') || '';\r\n    if(method==='GET'){\r\n        return fetch(url,{\r\n            method,\r\n            headers:{\r\n                'x-token':token\r\n            }\r\n        })\r\n    }\r\n    else{\r\n        return fetch(url,{\r\n            method,\r\n            headers:{\r\n                'Content-type':'application/json',\r\n                'x-token':token\r\n            },\r\n            body:JSON.stringify(data)\r\n        })\r\n    }\r\n}  \r\nexport{\r\n    fetchSinToken,\r\n    fetchConToken\r\n}","export const types ={\r\n    uiOpenModal:'[ui] Open Modal',\r\n    uiCloseModal :'[ui] Close Modal',\r\n    eventSetActive:'[event] Set Active',\r\n    eventAddNew:'[event] Add new',\r\n    eventStartAddNew :'[event] start Add New',\r\n    eventClearActive:'[event]Clear Active',\r\n    eventLogout:'[event]Log out',\r\n    eventUpdated:'[event]Event updated',\r\n    eventDeleted:'[event]Event deleted',\r\n    authChecking :'[auth] Checking login state',\r\n    authCheckingFinish :'[auth] Finish checking state',\r\n    authStartLogin :'[auth] Start Login',\r\n    authLogin :'[auth] Login',\r\n    authStartRegister :'[auth] Start register',\r\n    authStartTokenRenew :'[auth] Start token renew',\r\n    authLogout:'[auth] Logout',\r\n    eventLoaded:'[event] Events loaded'\r\n\r\n}","import moment from \"moment\"\r\n\r\n\r\nexport const prepareEvents = (events = [])=>{\r\n    return events.map((evento)=>({\r\n        ...evento,\r\n        end:moment(evento.end).toDate(),\r\n        start:moment(evento.start).toDate()\r\n    })) \r\n}","import Swal from \"sweetalert2\";\r\nimport { fetchConToken } from \"../helpers/fetch\";\r\nimport { prepareEvents } from \"../helpers/prepareEvents\";\r\nimport { types } from \"../types/types\";\r\n\r\nexport const eventStartAddNew = (event)=>{\r\n    return async(dispatch,getState)=>{\r\n        const {uid,name} =getState().auth\r\n        try {\r\n            const resp = await fetchConToken('events',event,'POST');\r\n            const body = await resp.json();\r\n            if (body.eventoDb){\r\n                event.id = body.eventoDb.id\r\n                event.user={\r\n                    _id:uid,\r\n                    name\r\n                }\r\n                dispatch(eventAddNew(event))\r\n            }\r\n        } catch (error) {\r\n            Swal.fire('Error',error,'error')\r\n        }\r\n    }\r\n}\r\n const eventAddNew = (event) =>({\r\n    type:types.eventAddNew,\r\n    payload:event\r\n})\r\nexport const eventSetActive = (event) =>({\r\n    type:types.eventSetActive,\r\n    payload:event\r\n})\r\nexport const eventClearActive = ()=>({\r\n    type:types.eventClearActive\r\n})\r\n\r\nexport const eventStartUpdate = (event)=>{\r\n    return async(dispatch) =>{\r\n        try {\r\n            const resp = await fetchConToken(`events/${event.id}`,event,'PUT')\r\n            const body = await resp.json()\r\n            if(body.evento){\r\n                dispatch(eventUpdated(event))\r\n            }\r\n            else{\r\n                Swal.fire('Error',body.msg,'error')\r\n            }\r\n        } catch (error) {\r\n            Swal.fire('Error',error,'error')\r\n        }\r\n    }\r\n}\r\n const eventUpdated = (event)=>({\r\n    type:types.eventUpdated,\r\n    payload:event\r\n})\r\nexport const eventLogout = ()=>({\r\n    type:types.eventLogout\r\n})\r\nexport const eventStartDelete = ()=>{\r\n    return async(dispatch,getState)=>{\r\n        const {id} =getState().calendar.activeEvent\r\n        try {\r\n            const resp = await fetchConToken(`events/${id}`,{},'DELETE')\r\n            const body = await resp.json()\r\n            if(body.eventoBorrado){\r\n                dispatch(eventDeleted())\r\n            }\r\n            else{\r\n                Swal.fire('Error',body.msg,'error')\r\n            }\r\n        } catch (error) {\r\n            Swal.fire('Error',error,'error')\r\n        }\r\n    }\r\n}\r\n const eventDeleted = ()=>({\r\n    type:types.eventDeleted\r\n})\r\n/* export const eventAddSelect = (event)=>({\r\n    type:types.eventAddSelected,\r\n    payload:event\r\n}) */\r\nexport const eventStartLoading = ()=>{\r\n    return async(dispatch) =>{\r\n        try {\r\n            const resp = await fetchConToken('events')\r\n            const body = await resp.json()\r\n            const events = prepareEvents(body.eventos)\r\n            dispatch(eventLoaded(events))\r\n            \r\n        } catch (error) {\r\n            Swal.fire('Error',error,'error')\r\n        }\r\n    }\r\n}\r\nconst eventLoaded = (events)=>({\r\n    type:types.eventLoaded,\r\n    payload:events\r\n})","import Swal from \"sweetalert2\";\r\nimport { fetchConToken, fetchSinToken } from \"../helpers/fetch\";\r\nimport { types } from \"../types/types\";\r\nimport { eventLogout } from \"./events\";\r\nexport const startLogin = (email, password) => {\r\n  return async (dispatch) => {\r\n    const resp = await fetchSinToken(\"auth\", { email, password }, \"POST\");\r\n    const body = await resp.json();\r\n    if (body.uid) {\r\n      localStorage.setItem(\"token\", body.token);\r\n      localStorage.setItem(\"token-init-date\", new Date().getTime());\r\n      dispatch(\r\n        login({\r\n          uid: body.uid,\r\n          email: body.email,\r\n          name: body.name,\r\n        })\r\n      );\r\n    } else {\r\n      Swal.fire(\"Error\", body.msg, \"error\");\r\n    }\r\n    if (body.errors) {\r\n      Swal.fire(\"Error\", \"correo o password incorrectos\", \"error\");\r\n    }\r\n  };\r\n};\r\nexport const startRegister = (email, password, name) => {\r\n  return async (dispatch) => {\r\n    const resp = await fetchSinToken(\r\n      \"auth/new\",\r\n      { email, password, name },\r\n      \"POST\"\r\n    );\r\n    const body = await resp.json();\r\n    if (body.uid) {\r\n      localStorage.setItem(\"token\", body.token);\r\n      localStorage.setItem(\"token-init-date\", new Date().getTime());\r\n      dispatch(\r\n        login({\r\n          uid: body.uid,\r\n          email: body.email,\r\n          name: body.name,\r\n        })\r\n      );\r\n    } else {\r\n      Swal.fire(\"Error\", body.msg, \"error\");\r\n    }\r\n  };\r\n};\r\nexport const startChecking = () => {\r\n  return async (dispatch) => {\r\n    const resp = await fetchConToken(\"auth/renew\");\r\n    const body = await resp.json();\r\n    if (body.uid) {\r\n      localStorage.setItem(\"token\", body.token);\r\n      localStorage.setItem(\"token-init-date\", new Date().getTime());\r\n      dispatch(\r\n        login({\r\n          uid: body.uid,\r\n          email: body.email,\r\n          name: body.name,\r\n        })\r\n      );\r\n    } else {\r\n      dispatch(checkingFinish());\r\n    }\r\n  };\r\n};\r\nconst checkingFinish = () => ({\r\n  type: types.authCheckingFinish,\r\n});\r\nconst login = (user) => ({\r\n  type: types.authLogin,\r\n  payload: user,\r\n});\r\nexport const startLogout = () => {\r\n  return (dispatch) => {\r\n    localStorage.removeItem(\"token\");\r\n    localStorage.removeItem(\"token-init-date\");\r\n    dispatch(eventLogout( ))\r\n    dispatch(logout());\r\n  };\r\n};\r\nconst logout = () => ({\r\n  type: types.authLogout,\r\n});\r\n","import { useState } from \"react\";\r\n\r\nexport const useForm = (initialState = {}) => {\r\n  const [values, setValues] = useState(initialState);\r\n  const reset = ()=>{\r\n    setValues(initialState)\r\n  }\r\n  const handleInputChange = ({ target }) => {\r\n    setValues({\r\n      ...values,\r\n      [target.name]: target.value,\r\n    });\r\n  };\r\n  return [values, handleInputChange,reset];\r\n};\r\n","import React from 'react';\r\nimport { useDispatch } from 'react-redux';\r\nimport Swal from 'sweetalert2';\r\nimport { startLogin, startRegister } from '../../actions/auth';\r\nimport { useForm } from '../../hooks/useForm/useForm';\r\nimport './login.css';\r\n\r\nexport const LoginScreen = () => {\r\n    const dispatch = useDispatch()\r\n    const[formLoginValues,handleLoginInputChange,resetLogin] = useForm({\r\n        lEmail:'',\r\n        lPassword:''\r\n    })\r\n    const[formRegisterValues,handleRegisterInputChange,resetRegister] = useForm({\r\n        rName:'',\r\n        rEmail:'',\r\n        rPassword1:'',\r\n        rPassword2:''\r\n    })\r\n    const handleLogin = (e)=>{\r\n        e.preventDefault();\r\n        dispatch(startLogin(lEmail,lPassword))\r\n        resetLogin()\r\n    }\r\n    const handleRegister = (e)=>{\r\n        e.preventDefault();\r\n        if(rPassword1!==rPassword2){\r\n            return Swal.fire('Error','Las contraseñas deben ser iguales','error')\r\n        }\r\n        dispatch(startRegister(rEmail,rPassword1,rName))\r\n        resetRegister()\r\n    }\r\n    const {lEmail,lPassword} = formLoginValues\r\n    const {rEmail,rPassword1,rName,rPassword2} = formRegisterValues\r\n    return (\r\n        <div className=\"container login-container\">\r\n            <div className=\"row\">\r\n                <div className=\"col-md-6 login-form-1\">\r\n                    <h3>Ingreso</h3>\r\n                    <form onSubmit = {handleLogin}>\r\n                        <div className=\"form-group\">\r\n                            <input \r\n                                type=\"text\"\r\n                                className=\"form-control\"\r\n                                placeholder=\"Correo\"\r\n                                name='lEmail'\r\n                                value={lEmail}\r\n                                onChange={handleLoginInputChange}\r\n                                required\r\n                            />\r\n                        </div>\r\n                        <div className=\"form-group\">\r\n                            <input\r\n                                type=\"password\"\r\n                                className=\"form-control\"\r\n                                placeholder=\"Contraseña\"\r\n                                name='lPassword'\r\n                                value={lPassword}\r\n                                onChange={handleLoginInputChange}\r\n                                required\r\n                            />\r\n                        </div>\r\n                        <div className=\"form-group\">\r\n                            <input \r\n                                type=\"submit\"\r\n                                className=\"btnSubmit\"\r\n                                value=\"Login\" \r\n                            />\r\n                        </div>\r\n                    </form>\r\n                </div>\r\n\r\n                <div className=\"col-md-6 login-form-2\">\r\n                    <h3>Registro</h3>\r\n                    <form onSubmit={handleRegister}>\r\n                        <div className=\"form-group\">\r\n                            <input\r\n                                type=\"text\"\r\n                                className=\"form-control\"\r\n                                placeholder=\"Nombre\"\r\n                                name='rName'\r\n                                value={rName}\r\n                                onChange={handleRegisterInputChange}\r\n                                required\r\n                            />\r\n                        </div>\r\n                        <div className=\"form-group\">\r\n                            <input\r\n                                type=\"email\"\r\n                                className=\"form-control\"\r\n                                placeholder=\"Correo\"\r\n                                name='rEmail'\r\n                                value={rEmail}\r\n                                onChange={handleRegisterInputChange}\r\n                                required\r\n                            />\r\n                        </div>\r\n                        <div className=\"form-group\">\r\n                            <input\r\n                                type=\"password\"\r\n                                className=\"form-control\"\r\n                                placeholder=\"Contraseña\" \r\n                                name='rPassword1'\r\n                                value={rPassword1}\r\n                                onChange={handleRegisterInputChange}\r\n                                required\r\n                            />\r\n                        </div>\r\n\r\n                        <div className=\"form-group\">\r\n                            <input\r\n                                type=\"password\"\r\n                                className=\"form-control\"\r\n                                placeholder=\"Repita la contraseña\" \r\n                                name='rPassword2'\r\n                                value={rPassword2}\r\n                                onChange={handleRegisterInputChange}\r\n                                required\r\n                            />\r\n                        </div>\r\n\r\n                        <div className=\"form-group\">\r\n                            <input \r\n                                type=\"submit\" \r\n                                className=\"btnSubmit\" \r\n                                value=\"Crear cuenta\" />\r\n                        </div>\r\n                    </form>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { useDispatch } from 'react-redux'\r\nimport { useSelector } from 'react-redux'\r\nimport { startLogout } from '../../actions/auth'\r\n\r\nconst NavBar = () => {\r\n    const dispatch = useDispatch()\r\n    const {name} = useSelector(state=>state.auth)\r\n    const handleLogout = ()=>{\r\n        dispatch(startLogout())\r\n    }\r\n    return (\r\n        <div className='navbar navbar-dark bg-dark mb-4'>\r\n            <span className='navbar-brand'>{name}</span>\r\n            <button className='btn btn-outline-danger' onClick={handleLogout}>\r\n                <i className='fas fa-sign-out-alt'></i>\r\n                <span>  Salir</span>\r\n                </button>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default NavBar\r\n","export const messages = {\r\n    allDay: 'Todo el día',\r\n    previous: '<',\r\n    next: '>',\r\n    today: 'Hoy',\r\n    month: 'Mes',\r\n    week: 'Semana',\r\n    day: 'Día',\r\n    agenda: 'Agenda',\r\n    date: 'Fecha',\r\n    time: 'Hora',\r\n    event: 'Evento',\r\n    noEventsInRange: 'No hay eventos en este rango',\r\n    showMore: total => `+ Ver más (${total})`\r\n};","import React from 'react'\r\n\r\nconst CalendarEvent = ({event}) => {\r\n    const {title,user} = event\r\n    return (\r\n        <div>\r\n            <strong>{title}</strong>\r\n            <span>- {user?.name}</span>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default CalendarEvent\r\n","import { types } from \"../types/types\";\r\n\r\nexport const uiOpenModal = () =>({\r\n    type:types.uiOpenModal\r\n})\r\nexport const uiCloseModal = ()=>({\r\n    type:types.uiCloseModal\r\n})","import React, { useEffect, useState } from \"react\";\r\nimport Modal from \"react-modal\";\r\nimport DateTimePicker from \"react-datetime-picker\";\r\nimport moment from \"moment\";\r\nimport Swal from \"sweetalert2\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { uiCloseModal } from \"../../actions/ui\";\r\nimport {\r\n  eventClearActive,\r\n  eventStartAddNew,\r\n  eventStartUpdate,\r\n} from \"../../actions/events\";\r\nconst customStyles = {\r\n  content: {\r\n    top: \"50%\",\r\n    left: \"50%\",\r\n    right: \"auto\",\r\n    bottom: \"auto\",\r\n    marginRight: \"-50%\",\r\n    transform: \"translate(-50%, -50%)\",\r\n  },\r\n};\r\nModal.setAppElement(\"#root\");\r\nconst now = moment().minutes(0).seconds(0).add(1, \"hours\");\r\nconst endDate = now.clone().add(1, \"hours\");\r\nconst initEvent = {\r\n  title: \"\",\r\n  notes: \"\",\r\n  start: now.toDate(),\r\n  end: endDate.toDate(),\r\n};\r\nconst CalendarModal = () => {\r\n  const dispatch = useDispatch();\r\n  const { modalOpen } = useSelector((state) => state.ui);\r\n  const { activeEvent } = useSelector((state) => state.calendar);\r\n  const [formValues, setFormValues] = useState(initEvent);\r\n  const [dateStart, setDateStart] = useState(now.toDate());\r\n  const [dateEnd, setDateEnd] = useState(endDate.toDate());\r\n  const [titleValid, setTitleValid] = useState(true);\r\n  const { title, notes, start, end } = formValues;\r\n  useEffect(() => {\r\n    if (activeEvent) {\r\n      setFormValues(activeEvent);\r\n    }else{\r\n      setFormValues(initEvent)\r\n    }\r\n  }, [activeEvent, setFormValues]);\r\n  const handleInputChange = ({ target }) => {\r\n    setFormValues({\r\n      ...formValues,\r\n      [target.name]: target.value,\r\n    });\r\n  };\r\n  const closeModal = () => {\r\n    dispatch(uiCloseModal());\r\n    dispatch(eventClearActive());\r\n    setFormValues(initEvent);\r\n  };\r\n  const handleEndDateChange = (e) => {\r\n    setDateEnd(e);\r\n    setFormValues({\r\n      ...formValues,\r\n      end: e,\r\n    });\r\n  };\r\n  const handleStartDateChange = (e) => {\r\n    setDateStart(e);\r\n    setFormValues({\r\n      ...formValues,\r\n      start: e,\r\n    });\r\n  };\r\n  const handleSubmitForm = (e) => {\r\n    e.preventDefault();\r\n    const momentStart = moment(start);\r\n    const momentEnd = moment(end);\r\n    if (momentStart.isSameOrAfter(momentEnd)) {\r\n      return Swal.fire(\r\n        \"Error\",\r\n        \"La fecha fin debe ser mayor a la fecha de Inicio\",\r\n        \"error\"\r\n      );\r\n    }\r\n    if (title.trim().length < 2) {\r\n      return setTitleValid(false);\r\n    }\r\n    if (activeEvent) {\r\n      dispatch(eventStartUpdate(formValues));\r\n    } else {\r\n      dispatch(\r\n        eventStartAddNew(formValues)\r\n      );\r\n    }\r\n\r\n    //realizar grabacion en bd\r\n    setTitleValid(true);\r\n    closeModal();\r\n  };\r\n  return (\r\n    <Modal\r\n      isOpen={modalOpen}\r\n      //onAfterOpen={afterOpenModal}\r\n      onRequestClose={closeModal}\r\n      style={customStyles}\r\n      className=\"modal\"\r\n      overlayClassName=\"modal-fondo\"\r\n      closeTimeoutMS={200}\r\n    >\r\n      <h2> {activeEvent ? 'Editar Evento' :'Nuevo Evento'} </h2>\r\n      <hr />\r\n      <form className=\"container\" onSubmit={handleSubmitForm}>\r\n        <div className=\"form-group\">\r\n          <label>Fecha y hora inicio</label>\r\n          <DateTimePicker\r\n            onChange={handleStartDateChange}\r\n            value={dateStart}\r\n            className=\"form-control\"\r\n          />\r\n        </div>\r\n\r\n        <div className=\"form-group\">\r\n          <label>Fecha y hora fin</label>\r\n          <DateTimePicker\r\n            onChange={handleEndDateChange}\r\n            value={dateEnd}\r\n            className=\"form-control\"\r\n            minDate={dateStart}\r\n          />\r\n        </div>\r\n\r\n        <hr />\r\n        <div className=\"form-group\">\r\n          <label>Titulo y notas</label>\r\n          <input\r\n            type=\"text\"\r\n            className={`form-control ${!titleValid && \"is-invalid\"}`}\r\n            placeholder=\"Título del evento\"\r\n            name=\"title\"\r\n            autoComplete=\"off\"\r\n            value={title}\r\n            onChange={handleInputChange}\r\n            required\r\n          />\r\n          <small id=\"emailHelp\" className=\"form-text text-muted\">\r\n            Una descripción corta\r\n          </small>\r\n        </div>\r\n\r\n        <div className=\"form-group\">\r\n          <textarea\r\n            type=\"text\"\r\n            className=\"form-control\"\r\n            placeholder=\"Notas\"\r\n            rows=\"1\"\r\n            name=\"notes\"\r\n            value={notes}\r\n            onChange={handleInputChange}\r\n          ></textarea>\r\n        </div>\r\n\r\n        <button type=\"submit\" className=\"btn btn-outline-primary btn-block\">\r\n          <i className=\"far fa-save\"></i>\r\n          <span> Guardar</span>\r\n        </button>\r\n      </form>\r\n    </Modal>\r\n  );\r\n};\r\n\r\nexport default CalendarModal;\r\n","import React from 'react'\r\nimport { useDispatch } from 'react-redux'\r\nimport { uiOpenModal } from '../../actions/ui'\r\n\r\nconst AddNewFab = () => {\r\n    const dispatch = useDispatch()\r\n    const handleOpenModal= ()=>{\r\n        dispatch(uiOpenModal())\r\n    }\r\n    return (\r\n        <button className='btn btn-primary fab' onClick={handleOpenModal}>\r\n            <i className='fas fa-plus' onClick={handleOpenModal}></i>\r\n        </button>\r\n    )   \r\n}\r\n\r\nexport default AddNewFab\r\n","import React from 'react'\r\nimport { useDispatch } from 'react-redux'\r\nimport { eventDeleted, eventStartDelete } from '../../actions/events'\r\n\r\nconst DeleteEventFab = () => {\r\n    const dispatch = useDispatch()\r\n    const handleDelete = ()=>{\r\n        dispatch(eventStartDelete())\r\n    }\r\n    return (\r\n        <button className='btn btn-danger fab-danger' onClick={handleDelete}>\r\n            <i className='fas fa-trash'></i>\r\n            <span> Borrar Evento</span>\r\n        </button>\r\n    )\r\n}\r\n\r\nexport default DeleteEventFab\r\n","import React, { useEffect, useState } from \"react\";\r\nimport NavBar from \"../ui/NavBar\";\r\nimport { Calendar,momentLocalizer } from \"react-big-calendar\";\r\nimport {messages} from '../../helpers/calendar-messages-es'\r\nimport moment from \"moment\";\r\nimport 'moment/locale/es'\r\nimport 'react-big-calendar/lib/css/react-big-calendar.css';\r\nimport CalendarEvent from \"./CalendarEvent\";\r\nimport CalendarModal from \"./CalendarModal\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { uiOpenModal } from \"../../actions/ui\";\r\nimport {  eventClearActive, eventSetActive, eventStartLoading } from \"../../actions/events\";\r\nimport AddNewFab from \"../ui/AddNewFab\";\r\nimport { useSelector } from \"react-redux\";\r\nimport DeleteEventFab from \"../ui/DeleteEventFab\";\r\nmoment.locale('es');\r\nconst localizer = momentLocalizer(moment);\r\n\r\nconst CalendarScreen = () => {\r\n    const dispatch = useDispatch()\r\n    //leer del store los eventos\r\n    const {events,activeEvent} = useSelector(state=>state.calendar)\r\n    const {uid} = useSelector(state=>state.auth)\r\n    const [lastView, setLastView] = useState(localStorage.getItem('lastView')||'month');\r\n    useEffect(()=>{\r\n      dispatch(eventStartLoading())\r\n    },[dispatch])\r\n    const onDoubleClick = ()=>{\r\n      dispatch(uiOpenModal())\r\n\r\n    }\r\n    const onSelectEvent = (e)=>{\r\n        dispatch(eventSetActive(e))\r\n    }\r\n    const onViewChange = (e)=>{\r\n        setLastView(e)\r\n        localStorage.setItem('lastView',e)\r\n    }\r\n    const onSelectSlot = (e)=>{\r\n        dispatch(eventClearActive())\r\n        /* onDoubleClick(dispatch(eventAddSelect({\r\n          id:new Date().getTime(),\r\n          title:'',\r\n          start:e.start,\r\n          end:e.end,\r\n          notes:''\r\n        }))) */\r\n      \r\n    }\r\n    const eventStyleGetter = (event,start,end,isSelected)=>{\r\n        const style = {\r\n            backgroundColor:(uid===event.user._id)?'#367CF7': '#465660',\r\n            boderRadius:'0px',\r\n            opacitiy:0.8,\r\n            display:'block',\r\n            color:'white'\r\n        }\r\n        return {\r\n            style\r\n        }\r\n    }\r\n  return (\r\n    <div className='calendar-screen'>\r\n      <NavBar />\r\n      <Calendar\r\n        localizer={localizer}\r\n        events={events}\r\n        startAccessor=\"start\"\r\n        endAccessor=\"end\"\r\n        messages={messages}\r\n        eventPropGetter={eventStyleGetter}\r\n        components={{event:CalendarEvent}}\r\n        onDoubleClickEvent={onDoubleClick}\r\n        onSelectEvent={onSelectEvent}\r\n        onView={onViewChange}\r\n        view={lastView}\r\n        onSelectSlot={onSelectSlot}\r\n        selectable={true}\r\n      />\r\n      <AddNewFab/>\r\n      {activeEvent && <DeleteEventFab/> }\r\n      <CalendarModal/>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CalendarScreen;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types'\r\nimport { Redirect, Route } from 'react-router'\r\n\r\nconst PrivateRoute = ({isAuthenticated,component:Component,...rest}) => {\r\n    localStorage.setItem('lastPath',rest.location.pathname)\r\n    return (\r\n        <Route {...rest} component={(props)=>((isAuthenticated)?(<Component {...props}/>):(<Redirect to='/login'/>)\r\n        )}\r\n        />\r\n    )\r\n}\r\nPrivateRoute.propTypes={\r\n    isAuthenticated:PropTypes.bool.isRequired,\r\n    component:PropTypes.func.isRequired\r\n}\r\nexport default PrivateRoute\r\n","import React from \"react\";\r\nimport PropTypes from 'prop-types'\r\nimport { Route,Redirect } from \"react-router\";\r\n\r\nconst PublicRoute = ({isAuthenticated,component:Component,...rest})=>{\r\n    return (\r\n        <Route {...rest} component={(props)=>((!isAuthenticated)?(<Component {...props}/>):(<Redirect to='/'/>)\r\n        )}\r\n        />\r\n    )\r\n}\r\nPublicRoute.propTypes={\r\n    isAuthenticated:PropTypes.bool.isRequired,\r\n    component:PropTypes.func.isRequired\r\n}\r\nexport default PublicRoute;","import React, { useEffect } from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { BrowserRouter as Router, Switch, Redirect } from \"react-router-dom\";\r\nimport { startChecking } from \"../actions/auth\";\r\nimport { LoginScreen } from \"../components/auth/LoginScreen\";\r\nimport CalendarScreen from \"../components/calendar/CalendarScreen\";\r\nimport PrivateRoute from \"./PrivateRoute\";\r\nimport PublicRoute from \"./PublicRoute\";\r\nconst AppRouter = () => {\r\n  const dispatch = useDispatch();\r\n  const { checking, uid } = useSelector((state) => state.auth);\r\n  useEffect(() => {\r\n    dispatch(startChecking());\r\n  }, [dispatch]);\r\n  if (checking) {\r\n    return <h5>Espere...</h5>;\r\n  }\r\n  return (\r\n    <Router>\r\n    <div>\r\n        <Switch>\r\n          <PublicRoute\r\n            path=\"/login\"\r\n            exact\r\n            component={LoginScreen}\r\n            isAuthenticated={!!uid}\r\n          />\r\n          <PrivateRoute\r\n            path=\"/\"\r\n            exact\r\n            component={CalendarScreen}\r\n            isAuthenticated={!!uid}\r\n          />\r\n          <Redirect to=\"/\" />\r\n        </Switch>\r\n    </div>\r\n     </Router>\r\n  );\r\n};\r\n\r\nexport default AppRouter;\r\n","import { types } from \"../types/types\";\r\n\r\nconst initialState = {\r\n    checking:true,\r\n    /* uid:null,\r\n    name:null */\r\n}\r\nexport const authReducer = (state=initialState,action)=>{\r\n    switch (action.type) {\r\n        case types.authLogin:\r\n            return {\r\n                ...state,\r\n                checking:false,\r\n                ...action.payload\r\n            }\r\n        case types.authStartRegister:\r\n            return{\r\n                ...state,\r\n                checking:false,\r\n                ...action.payload\r\n            }    \r\n        case types.authCheckingFinish:\r\n            return{\r\n                ...state,\r\n                checking:false\r\n            }    \r\n        case types.authLogout:\r\n            return {\r\n                checking:false\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n}","\r\nimport { types } from \"../types/types\";\r\n/* {\r\n  id: new Date().getTime(),\r\n  title: \"Cumpleaños Valentin\",\r\n  start: moment().toDate(),\r\n  end: moment().add(2, \"hours\").toDate(),\r\n  bgcolor: \"#fafafb\",\r\n  notes: \"comprar helado\",\r\n  user: {\r\n    uid: \"asf2\",\r\n    name: \"Josue\",\r\n  },\r\n}, */\r\nconst initialState = {\r\n  events: [],\r\n  activeEvent: null,\r\n};\r\nexport const calendarReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case types.eventSetActive:\r\n      return {\r\n        ...state,\r\n        activeEvent: action.payload,\r\n      };\r\n    case types.eventAddNew:\r\n      return {\r\n        ...state,\r\n        events: [...state.events, action.payload],\r\n      };\r\n    case types.eventClearActive:\r\n      return {\r\n        ...state,\r\n        activeEvent: null,\r\n      };\r\n    case types.eventUpdated:\r\n      return {\r\n        ...state,\r\n        events: state.events.map((e) =>\r\n          e.id === action.payload.id ? action.payload : e\r\n        ),\r\n      };\r\n      case types.eventDeleted:\r\n      return {\r\n        ...state,\r\n        events: state.events.filter((e) =>\r\n          (e.id !== state.activeEvent.id)\r\n        ),\r\n        activeEvent:null\r\n      };\r\n      case types.eventLoaded:\r\n      return {\r\n        ...state,\r\n        events: [...action.payload]\r\n      };\r\n      case types.eventLogout:\r\n      return {\r\n        ...initialState\r\n      };\r\n      /* case types.eventAddSelected:\r\n      return {\r\n        ...state,\r\n        activeEvent:action.payload,\r\n        events: [...state.events, action.payload]\r\n      }; */\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import { types } from \"../types/types\";\r\n\r\nconst initialState = {\r\n    modalOpen:false\r\n}\r\nexport const uiReducer = (state = initialState,action)=>{\r\n    switch (action.type) {\r\n        case types.uiOpenModal:\r\n            return{\r\n                ...state,\r\n                modalOpen:true\r\n            }\r\n            case types.uiCloseModal:\r\n            return{\r\n                ...state,\r\n                modalOpen:false\r\n            }\r\n            \r\n    \r\n        default:\r\n            return state\r\n    }\r\n}","import {combineReducers} from 'redux'\r\nimport { authReducer } from './authReducer'\r\nimport { calendarReducer } from './calendarReducer'\r\nimport { uiReducer } from './uiReducer'\r\n// aca se combinan los reducers\r\nexport const rootReducer = combineReducers({\r\n    ui:uiReducer,\r\n    calendar:calendarReducer,\r\n    auth:authReducer\r\n})","import { createStore,compose, applyMiddleware } from \"redux\";\r\nimport thunk from \"redux-thunk\";\r\nimport { rootReducer } from \"../reducers/rootReducer\";\r\nconst composeEnhancers = (typeof window !== 'undefined' && window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__) || compose;\r\n\r\nexport const store = createStore(\r\n    rootReducer,\r\n    composeEnhancers(applyMiddleware(thunk))\r\n)","import React from 'react'\r\nimport { Provider } from 'react-redux'\r\nimport AppRouter from './router/AppRouter'\r\nimport { store } from './store/store'\r\n\r\nconst CalendarApp = () => {\r\n    return (\r\n        <div>\r\n            <Provider store={store}>\r\n            <AppRouter/>\r\n            </Provider>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default CalendarApp\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport CalendarApp from './CalendarApp';\nimport './styles.css'\nReactDOM.render(\n    <CalendarApp />,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}